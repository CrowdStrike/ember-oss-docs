name: CI
"on":
  pull_request: null
  push:
    branches:
      - main
  schedule:
    - cron: "0 3 * * 0 "
env:
  CI: true
  dist: ember-oss-docs/dist
jobs:
  install_dependencies:
    name: Install Dependencies
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.1.2
      - name: Install Dependencies
        run: pnpm install
  eslint:
    name: ESLint
    needs:
      - install_dependencies
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        path:
          - ./ember-oss-docs
          - ./test-app
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.1.2
      - name: Install Dependencies
        run: pnpm install
      - name: ESLint
        run: cd ${{ matrix.path }} && pnpm run lint:js
  commits:
    name: Commit Messages
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: volta-cli/action@v1
      - uses: wagoid/commitlint-github-action@v5.0.2
  build:
    name: Build Tests
    needs:
      - install_dependencies
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.1.2
      - name: Install Dependencies
        run: pnpm install
      - name: Build and Assert Output
        run: |-
          echo 'target: ember-oss-docs/dist
          setup:
            run: pnpm build
            cwd: ./ember-oss-docs
          expect: |
            components/app.js
            components/hero.js
            components/main.js
          ' >> assert-contents.config.yml
                        npx assert-folder-contents
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
  tests:
    name: Default Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.1.2
      - name: Install Dependencies
        run: pnpm install
      - name: Download built package from cache
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
      - run: pnpm --filter test-app run test:ember
  floating-deps-tests:
    name: Floating Deps Test
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.1.2
      - name: Install Dependencies (without lockfile)
        run: rm pnpm-lock.yaml && pnpm install
      - name: Download built package from cache
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
      - run: pnpm --filter test-app run test:ember
  release:
    name: Release
    timeout-minutes: 5
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - tests
      - floating-deps-tests
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.1.2
      - name: Install Dependencies
        run: pnpm install
      - name: Download built package from cache
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
      - name: Release
        run: ./node_modules/.bin/semantic-release
        working-directory: ./ember-oss-docs
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
